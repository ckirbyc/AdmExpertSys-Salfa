@using CL.AdmExpertSys.WEB.Core.Domain.Dto
@using CL.AdmExpertSys.WEB.Presentation.Models
@using CL.AdmExpertSys.WEB.Core.Domain.Enums
@model CL.AdmExpertSys.WEB.Presentation.ViewModel.HomeSysWebVm
@{
    ViewBag.Title = "Editar Cuenta Usuario";
    Layout = "~/Views/_Main.cshtml";

    EstructuraArbolAd estructuraArbolAd = ViewBag.EstructuraArbolAd;
    MsolAccountSku firstEnterPrisePack = Model.ListaAccountSkus.FirstOrDefault(x => x.CodigoLicencia.Equals("ENTERPRISEPACK"));
    MsolAccountSku firstStandardPack = Model.ListaAccountSkus.FirstOrDefault(x => x.CodigoLicencia.Equals("STANDARDPACK"));
    MsolAccountSku firstExStandard = Model.ListaAccountSkus.FirstOrDefault(x => x.CodigoLicencia.Equals("EXCHANGESTANDARD"));
    string licEnterPrisePack = firstEnterPrisePack != null ? firstEnterPrisePack.MensajeCantidadLicencia : string.Empty;
    string licStandardPack = firstStandardPack != null ? firstStandardPack.MensajeCantidadLicencia : string.Empty;
    string licExStandard = firstExStandard != null ? firstExStandard.MensajeCantidadLicencia : string.Empty;
}

@using (Html.BeginForm())
{
    <div class="row">
        <h1 class="page-header colorOrange col-md-9">Editar</h1>
        <div class="form-inline col-md-3">
            <div id="btnSubmit" class="btn btn-primary pull-right btn-sm">
                <span class="glyphicon glyphicon-refresh"></span>
                <input type="button" value="Guardar" class="btnInput" id="Guardar" />
            </div>
        </div>
    </div>
    <div class="row">
        <h2 class="sub-header">Cuenta Usuario</h2>
        <div class="col-md-12">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(m => m.PatchOu)
            @Html.HiddenFor(m => m.ExisteUsuario)
            @Html.HiddenFor(m => m.CambioPatchOu)
            @Html.HiddenFor(m => m.JefaturaCn)
            <input type="hidden" id="EstadoSync" value="false" />
            <input type="hidden" id="NombreGrupoSel" value="" />
            <input type="hidden" id="FilaGrupoSel" value="1" />
            <table class="table table-secondary">
                <tbody>
                    <tr>
                        <th scope="row">@Html.DisplayName("Id Usuario")</th>
                        <td colspan="2">
                            @Html.TextBoxFor(m => m.NombreUsuario, new { @maxlength = "20", @class = "form-control", @style = "width: 75%" })
                            @Html.ValidationMessageFor(m => m.NombreUsuario)
                        </td>
                        <td colspan="2">
                            <div id="btnVerificar" class="btn btn-primary pull-right btn-sm">
                                <span class="glyphicon glyphicon-search"></span>
                                <input type="button" value="Buscar" class="btnInput" id="Buscar" />
                            </div>
                        </td>
                        <td>
                            <div id="btnDesUsr" class="btn btn-primary pull-right btn-sm">
                                <span class="glyphicon glyphicon-remove"></span>
                                <input type="button" value="Deshabilitar" class="btnInput" id="DeshabilitarUsr" />
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayName("Dominio")</th>
                        <td>
                            @Html.DropDownListFor(m => m.UpnPrefijo, Model.UpnPrefijoLista, "Seleccione", new { @class = "form-control", @style = "width: 100%" })
                            @Html.ValidationMessageFor(m => m.UpnPrefijo)
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Nombres)</th>
                        <td>
                            @Html.TextBoxFor(m => m.Nombres, new { @maxlength = "50", @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(m => m.Nombres)
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Apellidos)</th>
                        <td>
                            @Html.TextBoxFor(m => m.Apellidos, new { @maxlength = "50", @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(m => m.Apellidos)
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayName("Nombre Completo")</th>
                        <td>
                            @Html.TextBoxFor(m => m.NombreCompleto, new { @maxlength = "50", @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(m => m.NombreCompleto)
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Clave)</th>
                        <td>
                            @Html.TextBoxFor(m => m.Clave, new { @maxlength = "50", @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(m => m.Clave)
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Correo)</th>
                        <td colspan="2">
                            @Html.TextBoxFor(m => m.Correo, new { @maxlength = "50", @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(m => m.Correo)
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.CodigoLicencia)</th>
                        <td colspan="2">
                            @Html.DropDownListFor(m => m.CodigoLicencia, Model.CodigoLicenciaLista, "Seleccione", new { @class = "form-control", @style = "width: 100%" })
                            @Html.ValidationMessageFor(m => m.CodigoLicencia)
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Anexo)</th>
                        <td>
                            @Html.TextBoxFor(m => m.Anexo, new { @maxlength = "10", @class = "form-control", @disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Cumpleanos)</th>
                        <td>
                            <div class="fechaContainerDiaMes">
                                <div class="input-group date fechaDiaMes">
                                    @Html.TextBoxFor(m => m.Cumpleanos, new { @class = "form-control fechaDiaMes", maxlength = "5" })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.CentroCosto)</th>
                        <td>
                            @Html.TextBoxFor(m => m.CentroCosto, new { @maxlength = "50", @class = "form-control", @disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Oficina)</th>
                        <td>
                            @Html.DropDownListFor(m => m.Oficina, Model.Oficinas, "Seleccione", new { @class = "form-control", @style = "width: 100%" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Ciudad)</th>
                        <td>
                            @Html.DropDownListFor(m => m.Ciudad, Model.Ciudades, "Seleccione", new { @class = "form-control", @style = "width: 100%" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.PaisRegion)</th>
                        <td>
                            @Html.DropDownListFor(m => m.PaisRegion, Model.PaisesRegiones, "Seleccione", new { @class = "form-control", @style = "width: 100%" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.DireccionSucursal)</th>
                        <td>
                            @Html.TextAreaFor(m => m.DireccionSucursal, new { cols = "20", rows = "5", @class = "form-control", @disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Ingreso)</th>
                        <td>
                            <div class="fechaContainer">
                                <div class="input-group date fecha">
                                    @Html.TextBoxFor(m => m.Ingreso, new { @class = "form-control fecha", maxlength = "10" })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Cargo)</th>
                        <td>
                            @Html.DropDownListFor(m => m.Cargo, Model.Cargos, "Seleccione", new { @class = "form-control", @style = "width: 100%" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Departamento)</th>
                        <td>
                            @Html.DropDownListFor(m => m.Departamento, Model.Departamentos, "Seleccione", new { @class = "form-control", @style = "width: 100%" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Organizacion)</th>
                        <td>
                            @Html.DropDownListFor(m => m.Organizacion, Model.Organizaciones, "Seleccione", new { @class = "form-control", @style = "width: 100%" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Jefatura)</th>
                        <td colspan="2">
                            @Html.TextBoxFor(m => m.Jefatura, new { @maxlength = "200", @class = "form-control", @disabled = "disabled" })
                        </td>
                        <td colspan="2">
                            <div id="btnAsignarJefatura" class="btn btn-primary pull-right btn-sm">
                                <span class="glyphicon glyphicon-plus"></span>
                                <input type="button" value="Busar Jefe" class="btnInput" id="AsignarJefatura" />
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Movil)</th>
                        <td>
                            @Html.TextBoxFor(m => m.Movil, new { @maxlength = "50", @class = "form-control", @disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Domicilio)</th>
                        <td>
                            @Html.TextBoxFor(m => m.Domicilio, new { @maxlength = "100", @class = "form-control", @disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.PinHp)</th>
                        <td>
                            @Html.TextBoxFor(m => m.PinHp, new { @maxlength = "50", @class = "form-control", @disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.TelefIp)</th>
                        <td>
                            @Html.TextBoxFor(m => m.TelefIp, new { @maxlength = "50", @class = "form-control", @disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Notas)</th>
                        <td>
                            @Html.TextAreaFor(m => m.Notas, new { cols = "20", rows = "5", @class = "form-control", @disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.Rut)</th>
                        <td>
                            @Html.TextBoxFor(m => m.Rut, new { @maxlength = "10", @class = "form-control", @disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.UsrCambiaClaveSesion)</th>
                        <td>
                            @Html.CheckBoxFor(m => m.UsrCambiaClaveSesion, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.UsrNoCambiaClave)</th>
                        <td>
                            @Html.CheckBoxFor(m => m.UsrNoCambiaClave, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.ClaveNoExpira)</th>
                        <td>
                            @Html.CheckBoxFor(m => m.ClaveNoExpira, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(m => m.AlmacenarClave)</th>
                        <td>
                            @Html.CheckBoxFor(m => m.AlmacenarClave, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayName("Empresas")</th>
                        <td>
                            <div id="jstree">
                                <!-- in this example the tree is populated from inline HTML -->
                                <ul>
                                    @if (estructuraArbolAd != null)
                                    {
                                        <li>
                                            @estructuraArbolAd.Cabecera
                                            <ul>
                                                @Html.Raw(estructuraArbolAd.CodArbolHtml)
                                            </ul>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row" rowspan="3">@Html.DisplayNameFor(m => m.Licencia)</th>
                        <td>
                            <div id="btnLicE1" class="btn btn-primary btn-sm btn-block pull-right">
                                <span class="glyphicon glyphicon-check"></span>
                                <input type="button" value="Office 365 Empresarial Plan E1" class="btnInput" data-toggle="collapse" data-target="#demo1" id="STANDARDPACK" />
                            </div>
                        </td>
                        <td colspan="2">
                            <label>@licStandardPack</label>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div id="btnLicE3" class="btn btn-primary btn-sm btn-block pull-right">
                                <span class="glyphicon glyphicon-check"></span>
                                <input type="button" value="Office 365 Empresarial Plan E3" class="btnInput" data-toggle="collapse" data-target="#demo2" id="ENTERPRISEPACK" />
                            </div>
                        </td>
                        <td colspan="2">
                            <label>@licEnterPrisePack</label>
                        </td>
                    </tr>
                    @*<tr>
                    <td>
                        <div id="btnLicExO" class="btn btn-primary btn-sm btn-block pull-right">
                            <span class="glyphicon glyphicon-check"></span>
                            <input type="button" value="Office 365 Exchange Online P1" class="btnInput" data-toggle="collapse" data-target="#demo3" id="EXCHANGESTANDARD" />
                        </div>
                    </td>
                    <td colspan="2">
                        <label>@licExStandard</label>
                    </td>
                </tr>*@
                </tbody>
            </table>
        </div>
    </div>
    <div class="row" id="SeccionAsociarGrupo" style="display: none;">
        <h2 class="colorSky col-md-12">Asociar o Desasociar Usuario a Grupos</h2>
        <div class="col-md-10">
            <table class="table table-hover tablaMantenedores" id="tbAsociarGrupo">
                <thead>
                    <tr>
                        <th>N°</th>
                        <th>Nombre Grupo</th>
                        <th>Tipo</th>
                        <th>Ubicación</th>
                        <th>Acción</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        <div class="col-md-2">
            <div id="btnBuscarGrupo" class="btn btn-primary pull-right btn-sm">
                <span class="glyphicon glyphicon-search"></span>
                <input type="button" value="Buscar Grupos" class="btnInput" id="BuscarGrupo" />
            </div>
        </div>
        <div class="col-md-12">
            <div id="btnGrabarGrupo" class="btn btn-primary pull-right btn-sm">
                <span class="glyphicon glyphicon-plus"></span>
                <input type="button" value="Grabar Grupos" class="btnInput" id="GrabarGrupo" />
            </div>
        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h2 class="modal-title" id="myModalLabel">Buscar y asignar Jefatura</h2>
                </div>
                <div class="modal-body">
                </div>
                <br />
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm" id="btnCerrar" data-dismiss="modal"><strong>Cerrar</strong></button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="myModalGrupo" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h2 class="modal-title" id="myModalLabelGrupo">Buscar y asignar Grupos</h2>
                </div>
                <div class="modal-body">
                </div>
                <br />
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm" id="btnCerrarGrupo" data-dismiss="modal"><strong>Cerrar</strong></button>
                </div>
            </div>
        </div>
    </div>
}
<div class="row">
    <a href="@Url.Action("Index", "UsuarioCreado")" class="btn btn-info"><span class="glyphicon glyphicon-chevron-left"></span>&nbsp;Volver</a>
</div>
<script src="~/Scripts/Menu/ActivaMenu.js"></script>
<script src="~/Scripts/Fechas/ConfiguracionFecha.js"></script>
<script src="~/Scripts/FuncionesGenerales.js"></script>
<script>
    $('#EditarCuenta').addClass('active');
</script>
<script>
    $('#btnAsignarJefatura').off('click').click(function () {
        VerPopupAsignarJefatura();
    });

    function VerPopupAsignarJefatura()
    {
        $("#loading-modal").show();
        $.ajax({
            type: "POST",
            url: '@Url.Action("VerPopupAsignarJefatura", "Home")?cuentaId=' + $("#NombreUsuario").val(),
            success: function (data) {
                $('#myModal .modal-body').empty();
                $('#myModal .modal-body').append(data);
                $('#myModal').find('.modal').css('width', '90%');
                $('#myModal').find('.modal-dialog').css('width', '90%');
                $('#myModal').modal('show');
                $("#loading-modal").hide();
            },
            error: function (jqXHR, textStatus, errorThown) {
                $("#loading-modal").hide();
                console.log(jqXHR);
                console.log(textStatus);
                console.log(errorThown);
            }
        });
    }

    $('#btnBuscarGrupo').off('click').click(function () {
            VerPopupAsignarGrupo();
    });

    function VerPopupAsignarGrupo()
    {
        $("#loading-modal").show();
        $.ajax({
            type: "POST",
            url: '@Url.Action("VerPopupAsignarGrupo", "Home")?cuentaId=' + $("#NombreUsuario").val(),
            success: function (data) {
                $('#myModalGrupo .modal-body').empty();
                $('#myModalGrupo .modal-body').append(data);
                $('#myModalGrupo').find('.modal').css('width', '90%');
                $('#myModalGrupo').find('.modal-dialog').css('width', '90%');
                $('#myModalGrupo').modal('show');
                $("#loading-modal").hide();
            },
            error: function (jqXHR, textStatus, errorThown) {
                $("#loading-modal").hide();
                console.log(jqXHR);
                console.log(textStatus);
                console.log(errorThown);
            }
        });
    }

    $('#jstree').jstree();
    $("#UpnPrefijo").attr("disabled", false);
    $("#UpnPrefijo").prop('disabled', 'disabled');
    $("#btnDesUsr").attr("disabled", true);
    $("#btnLicE1").attr("disabled", true);
    $("#btnLicE3").attr("disabled", true);
    //$("#btnLicExO").attr("disabled", true);
    $("#CodigoLicencia").attr("disabled", false);
    $("#CodigoLicencia").prop('disabled', 'disabled');
    $("#Oficina").attr("disabled", false);
    $("#Oficina").prop('disabled', 'disabled');
    $("#Ciudad").attr("disabled", false);
    $("#Ciudad").prop('disabled', 'disabled');
    $("#PaisRegion").attr("disabled", false);
    $("#PaisRegion").prop('disabled', 'disabled');
    $("#Organizacion").attr("disabled", false);
    $("#Organizacion").prop('disabled', 'disabled');
    $("#Cargo").attr("disabled", false);
    $("#Cargo").prop('disabled', 'disabled');
    $("#Departamento").attr("disabled", false);
    $("#Departamento").prop('disabled', 'disabled');
    $("#UsrCambiaClaveSesion").attr("disabled", false);
    $("#UsrCambiaClaveSesion").prop('disabled', 'disabled');
    $("#UsrNoCambiaClave").attr("disabled", false);
    $("#UsrNoCambiaClave").prop('disabled', 'disabled');
    $("#ClaveNoExpira").attr("disabled", false);
    $("#ClaveNoExpira").prop('disabled', 'disabled');
    $("#AlmacenarClave").attr("disabled", false);
    $("#AlmacenarClave").prop('disabled', 'disabled');
    $("#btnGrabarGrupo").attr('disabled', true);

    $(document).ready(function () {
        //Seleccionar OU desde el Arbol
        $('#jstree').on("changed.jstree", function (e, data) {
            var ldap = data.selected[0];
            $("#PatchOu").val(ldap);
            $("#CambioPatchOu").val(true);
        });

        $("#UsrCambiaClaveSesion").off('click').click(function () {
            if ($('#UsrCambiaClaveSesion').is(":checked")) {
                $("#UsrNoCambiaClave").attr("checked", false);
                $("#UsrNoCambiaClave").attr("disabled", true);
                $("#ClaveNoExpira").attr("checked", false);
                $("#ClaveNoExpira").attr("disabled", true);
            }
            else {
                $("#UsrNoCambiaClave").attr("checked", false);
                $("#UsrNoCambiaClave").attr("disabled", false);
                $("#ClaveNoExpira").attr("checked", false);
                $("#ClaveNoExpira").attr("disabled", false);
            }
        });

        $("#UsrNoCambiaClave,#ClaveNoExpira").off('click').click(function () {
            if ($('#UsrNoCambiaClave').is(":checked") || $('#ClaveNoExpira').is(":checked")) {
                $("#UsrCambiaClaveSesion").attr("checked", false);
                $("#UsrCambiaClaveSesion").attr("disabled", true);
            }
            else {
                $("#UsrCambiaClaveSesion").attr("checked", false);
                $("#UsrCambiaClaveSesion").attr("disabled", false);
            }
        });

        $("#Apellidos").off('blur').blur(function () {
            var nombreCompleto = $("#Nombres").val() + " " + $("#Apellidos").val();
            $("#NombreCompleto").val(nombreCompleto);
        });

        $("#UpnPrefijo").off('change').change(function () {
            var correo = $("#NombreUsuario").val() + $("#UpnPrefijo").val();
            $("#Correo").val(correo);
        });

        $("#btnVerificar").off('click').click(function () {
            $("#loading-modal").show();
            if ($("#NombreUsuario").val() != '') {
                setTimeout(function () {
                    validarUsuario();
                }, 1000);
            } else {
                setTimeout(function () {
                    $("#loading-modal").hide();
                    BootstrapDialog.alert({
                        title: '¡Advertencia!',
                        message: '<strong>Debe ingresar un ID de usuario</strong>',
                        type: BootstrapDialog.TYPE_WARNING
                    });
                }, 1000);
            }
        });

        $("#btnGrabarGrupo").off('click').click(function () {
            if ($("#NombreGrupoSel").val() == '') {
                BootstrapDialog.alert({
                    title: '¡Validación Grupos!',
                    message: '<strong>Debe asignar Grupos a la tabla para poder grabar. Intente nuevamente.</strong>',
                    type: BootstrapDialog.TYPE_WARNING
                });
                return;
            }
            if ($("#NombreUsuario").val() == '') {
                BootstrapDialog.alert({
                    title: '¡Validación Grupos!',
                    message: '<strong>Debe asignar un Id Usuario válido para poder grabar. Intente nuevamente.</strong>',
                    type: BootstrapDialog.TYPE_WARNING
                });
                return;
            }

            BootstrapDialog.show({
                title: 'Confirmación Grabar Grupos.',
                message: '<strong>¿Está seguro de Grabar todos los grupos asignados a la cuenta?</strong>',
                type: BootstrapDialog.TYPE_INFO,
                buttons:
                    [
                        {
                            label: 'Si',
                            cssClass: 'btn-success',
                            action: function (dialog) {
                                dialog.close();
                                $("#loading-modal").show();
                                setTimeout(function () {
                                    asignarGrupoSplitUsuario();
                                }, 1000);
                            }
                        },
                        {
                            label: 'No',
                            cssClass: 'btn-danger',
                            action: function (dialog) {
                                dialog.close();
                            }
                        }
                    ]
            });
        });

        function asignarGrupoSplitUsuario()
        {                
            $.ajax({
                url: '@Url.Action("AsociarGrupoSplitUsuario", "Home")',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                async: false,
                dataType: 'json',
                processData: false,
                data: JSON.stringify({ nomGrupoSplit: $("#NombreGrupoSel").val(), userName: $("#NombreUsuario").val() }),
                success: function (data) {
                    if (data.Session == false) {
                        BootstrapDialog.alert({
			                    title: '¡Validación Sesión!',
			                    message: '<strong>Su sesión ha expirado. Seleccione <a href="@Url.Action("IndexLogin", "Error", new { mensajeError = "Su sesión ha expirado." })">aquí</a> para iniciar sesión nuevamente</strong>',
			                    type: BootstrapDialog.TYPE_WARNING
		                    });
                        return;
                    }

                    if (data.Error != '') {
                        BootstrapDialog.alert({
                            title: '¡Error al asociar Grupo a Usuario en el AD!',
                            message: '<strong>' + data.Error + '</strong>',
                            type: BootstrapDialog.TYPE_DANGER
                        });
                    } else {
                        if (data.Validar) {                                                
                            BootstrapDialog.alert({
                                title: '¡Proceso Exitoso!',
                                message: '<strong>Grupos asociados exitosamente al Usuario.</strong>',
                                type: BootstrapDialog.TYPE_SUCCESS
                            });
                        } else {
                            BootstrapDialog.alert({
                                title: '¡Error al asociar Grupos al Usuario en el AD!',
                                message: '<strong>No se pudo asignar el o los Grupos al Usuario, intente más tarde.</strong>',
                                type: BootstrapDialog.TYPE_DANGER
                            });
                        }
                    }
                },
                complete: function () {
                    $("#loading-modal").hide();
                    $("#btnGrabarGrupo").attr('disabled', true);
                },
                error: function (data) {
                    $("#loading-modal").hide();
                    BootstrapDialog.alert({
                        title: '¡Error al asociar Grupos al Usuario en el AD!',
                        message: '<strong>' + data.Error + '</strong>',
                        type: BootstrapDialog.TYPE_DANGER
                    });
                }
            });        
        }

        function validarUsuario() {
            var nombreUsuario = $("#NombreUsuario").val();

            $.ajax({
                url: '@Url.Action("VerificarUsuario", "Home")',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                async: false,
                dataType: 'json',
                processData: false,
                data: JSON.stringify({ nombreUsuario: nombreUsuario }),
                success: function (data) {
                    if (data.Validar) {
                        habilitarCampos(data);
                        $("#EstadoSync").val(data.EstadoSync);
                        BootstrapDialog.alert({
                            title: '¡Verificación Exitosa!',
                            message: '<strong>Usuario Existe y cuenta se encuentra en estado ' + data.DatosUsuario.EstadoCuenta + '</strong>',
                            type: BootstrapDialog.TYPE_SUCCESS
                        });
                    } else {
                        desHabilitarCampos(data);
                        $("#EstadoSync").val(data.EstadoSync);
                        BootstrapDialog.alert({
                            title: '¡Verificación Exitosa!',
                            message: '<strong>Usuario No Existe</strong>',
                            type: BootstrapDialog.TYPE_SUCCESS
                        });
                    }
                },
                complete: function () {
                    $("#loading-modal").hide();
                    $("#SeccionAsociarGrupo").hide();
                    $("#SeccionAsociarGrupo tbody").html('');
                    listaGruposAdByOu();
                },
                error: function (data) {
                    desHabilitarCampos(data);
                    $("#EstadoSync").val(data.EstadoSync);
                    BootstrapDialog.alert({
                        title: '¡Verificación Erronea!',
                        message: '<strong>Error en la verificación.</strong>',
                        type: BootstrapDialog.TYPE_DANGER
                    });
                }
            });
        }

        function habilitarCampos(data)
        {
            var codAdm = '@Convert.ToInt32(EnumPerfilUsuario.ADMP)';
            var codOperador = '@Convert.ToInt32(EnumPerfilUsuario.OPERADOR)';
            var codPerfil = '@SessionViewModel.Usuario.PerfilId';

            var clave = data.Clave;
            if (clave == '') {
                clave = "***";
            }
            if (codAdm == codPerfil) {
                $('#jstree').jstree("deselect_all");
                $("#btnSubmit").attr("disabled", false);
                $("#btnDesUsr").attr("disabled", false);
                $("#UpnPrefijo").attr("disabled", false);
                $("#UpnPrefijo").val(data.DatosUsuario.UpnPrefijo);
                $("#Nombres").removeAttr("disabled");
                $("#Nombres").val(data.DatosUsuario.GivenName);
                $("#Apellidos").removeAttr("disabled");
                $("#Apellidos").val(data.DatosUsuario.Surname);
                $("#Clave").removeAttr("disabled");
                $("#Clave").val(clave);
                $("#Licencia").attr("disabled", "disabled");
                $("#NombreCompleto").attr("disabled", "disabled");
                $("#NombreCompleto").val(data.DatosUsuario.DisplayName);
                $("#Correo").attr("disabled", "disabled");
                $("#Correo").val(data.DatosUsuario.EmailAddress);
                $("#ExisteUsuario").val(true);
                $("#CodigoLicencia").attr("disabled", false);
                $("#CodigoLicencia").val(data.CodigoLicencia);

                //Seleccionar nodo existente
                var ubicGrupo = data.DatosUsuario.DistinguishedName;
                var myLiId = '#' + ubicGrupo;
                $("#jstree").jstree("select_node", myLiId);
                $("#PatchOu").val(ubicGrupo);
                $("#CambioPatchOu").val(false);

                //Nuevos campos
                $("#Anexo").val(data.DatosUsuario.TelephoneNumber);
                $("#Anexo").attr("disabled", false);
                $("#Cumpleanos").val(data.DatosUsuario.WwwHomePage);
                $("#Cumpleanos").attr("disabled", false);
                $("#CentroCosto").val(data.DatosUsuario.Description);
                $("#CentroCosto").attr("disabled", false);
                $("#Oficina").val(data.DatosUsuario.Office);
                $("#Oficina").attr("disabled", false);
                $("#Ciudad").val(data.DatosUsuario.L);
                $("#Ciudad").attr("disabled", false);
                $("#PaisRegion").val(data.DatosUsuario.C);
                $("#PaisRegion").attr("disabled", false);
                $("#DireccionSucursal").val(data.DatosUsuario.StreetAddress);
                $("#DireccionSucursal").attr("disabled", false);
                $("#Ingreso").val(data.DatosUsuario.PostOfficeBox);
                $("#Ingreso").attr("disabled", false);
                $("#Cargo").val(data.DatosUsuario.Title);
                $("#Cargo").attr("disabled", false);
                $("#Departamento").val(data.DatosUsuario.Department);
                $("#Departamento").attr("disabled", false);
                $("#Organizacion").val(data.DatosUsuario.Company);
                $("#Organizacion").attr("disabled", false);
                $("#Jefatura").val(data.DatosUsuario.Manager);
                $("#JefaturaCn").val(data.DatosUsuario.ManagerCn);
                $("#Movil").val(data.DatosUsuario.Mobile);
                $("#Movil").attr("disabled", false);
                $("#Domicilio").val(data.DatosUsuario.HomePhone);
                $("#Domicilio").attr("disabled", false);
                $("#PinHp").val(data.DatosUsuario.FacsimileTelephoneNumber);
                $("#PinHp").attr("disabled", false);
                $("#TelefIp").val(data.DatosUsuario.IpPhone);
                $("#TelefIp").attr("disabled", false);
                $("#Notas").val(data.DatosUsuario.InfoNote);
                $("#Notas").attr("disabled", false);
                $("#Rut").val(data.DatosUsuario.EmployeeID);
                $("#Rut").attr("disabled", false);
                $("#UsrCambiaClaveSesion").attr("checked", false);
                $("#UsrCambiaClaveSesion").attr("disabled", false);
                $("#UsrNoCambiaClave").attr("checked", false);
                $("#UsrNoCambiaClave").attr("disabled", false);
                $("#ClaveNoExpira").attr("checked", false);
                $("#ClaveNoExpira").attr("disabled", false);
                $("#AlmacenarClave").attr("checked", false);
                $("#AlmacenarClave").attr("disabled", false);
            }
            else if (codOperador == codPerfil)
            {
                $('#jstree').jstree("deselect_all");
                $("#btnSubmit").attr("disabled", false);
                $("#UpnPrefijo").val(data.DatosUsuario.UpnPrefijo);
                $("#Nombres").val(data.DatosUsuario.GivenName);
                $("#Apellidos").val(data.DatosUsuario.Surname);
                $("#Clave").val(clave);
                $("#Clave").attr("disabled", false);
                $("#NombreCompleto").val(data.DatosUsuario.DisplayName);
                $("#Correo").val(data.DatosUsuario.EmailAddress);
                $("#ExisteUsuario").val(true);
                $("#CodigoLicencia").val(data.CodigoLicencia);

                //Seleccionar nodo existente
                var ubicGrupo = data.DatosUsuario.DistinguishedName;
                var myLiId = '#' + ubicGrupo;
                $("#jstree").jstree("select_node", myLiId);
                $("#PatchOu").val(ubicGrupo);
                $("#CambioPatchOu").val(false);

                //Nuevos campos
                $("#Anexo").val(data.DatosUsuario.TelephoneNumber);
                $("#Cumpleanos").val(data.DatosUsuario.WwwHomePage);
                $("#CentroCosto").val(data.DatosUsuario.Description);
                $("#Oficina").val(data.DatosUsuario.Office);
                $("#Ciudad").val(data.DatosUsuario.L);
                $("#PaisRegion").val(data.DatosUsuario.C);
                $("#DireccionSucursal").val(data.DatosUsuario.StreetAddress);
                $("#Ingreso").val(data.DatosUsuario.PostOfficeBox);
                $("#Cargo").val(data.DatosUsuario.Title);
                $("#Departamento").val(data.DatosUsuario.Department);
                $("#Organizacion").val(data.DatosUsuario.Company);
                $("#Jefatura").val(data.DatosUsuario.Manager);
                $("#JefaturaCn").val(data.DatosUsuario.ManagerCn);
                $("#Movil").val(data.DatosUsuario.Mobile);
                $("#Domicilio").val(data.DatosUsuario.HomePhone);
                $("#PinHp").val(data.DatosUsuario.FacsimileTelephoneNumber);
                $("#TelefIp").val(data.DatosUsuario.IpPhone);
                $("#Notas").val(data.DatosUsuario.InfoNote);
                $("#Rut").val(data.DatosUsuario.EmployeeID);

                $('#jstree li').each(function () {
                    $("#jstree").jstree().disable_node(this.id);
                });
            }
            else
            {
                $('#jstree').jstree("deselect_all");
                $("#btnSubmit").attr("disabled", false);
                $("#UpnPrefijo").val(data.DatosUsuario.UpnPrefijo);
                $("#Nombres").val(data.DatosUsuario.GivenName);
                $("#Apellidos").val(data.DatosUsuario.Surname);
                $("#Clave").val(clave);
                $("#NombreCompleto").val(data.DatosUsuario.DisplayName);
                $("#Correo").val(data.DatosUsuario.EmailAddress);
                $("#ExisteUsuario").val(true);
                $("#CodigoLicencia").val(data.CodigoLicencia);

                //Seleccionar nodo existente
                var ubicGrupo = data.DatosUsuario.DistinguishedName;
                var myLiId = '#' + ubicGrupo;
                $("#jstree").jstree("select_node", myLiId);
                $("#PatchOu").val(ubicGrupo);
                $("#CambioPatchOu").val(false);

                //Nuevos campos
                $("#Anexo").val(data.DatosUsuario.TelephoneNumber);
                $("#Anexo").attr("disabled", false);
                $("#Cumpleanos").val(data.DatosUsuario.WwwHomePage);
                $("#Cumpleanos").attr("disabled", false);
                $("#CentroCosto").val(data.DatosUsuario.Description);
                $("#CentroCosto").attr("disabled", false);
                $("#Oficina").val(data.DatosUsuario.Office);
                $("#Oficina").attr("disabled", false);
                $("#Ciudad").val(data.DatosUsuario.L);
                $("#Ciudad").attr("disabled", false);
                $("#PaisRegion").val(data.DatosUsuario.C);
                $("#DireccionSucursal").val(data.DatosUsuario.StreetAddress);
                $("#DireccionSucursal").attr("disabled", false);
                $("#Ingreso").val(data.DatosUsuario.PostOfficeBox);
                $("#Ingreso").attr("disabled", false);
                $("#Cargo").val(data.DatosUsuario.Title);
                $("#Cargo").attr("disabled", false);
                $("#Departamento").val(data.DatosUsuario.Department);
                $("#Departamento").attr("disabled", false);
                $("#Organizacion").val(data.DatosUsuario.Company);
                $("#Organizacion").attr("disabled", false);
                $("#Jefatura").val(data.DatosUsuario.Manager);
                $("#JefaturaCn").val(data.DatosUsuario.ManagerCn);
                $("#Movil").val(data.DatosUsuario.Mobile);
                $("#Movil").attr("disabled", false);
                $("#Domicilio").val(data.DatosUsuario.HomePhone);
                $("#Domicilio").attr("disabled", false);
                $("#PinHp").val(data.DatosUsuario.FacsimileTelephoneNumber);
                $("#TelefIp").val(data.DatosUsuario.IpPhone);
                $("#TelefIp").attr("disabled", false);
                $("#Notas").val(data.DatosUsuario.InfoNote);
                $("#Rut").val(data.DatosUsuario.EmployeeID);

                $('#jstree li').each(function () {
                    $("#jstree").jstree().disable_node(this.id);
                });
            }

            if (data.DatosUsuario.UserCannotChangePassword == true) {
                $("#UsrNoCambiaClave").prop("checked");
                $("#UsrNoCambiaClave").attr("checked", true);
                $("#UsrNoCambiaClave")[0].checked = true;
            }
            else {
                $("#UsrNoCambiaClave").attr("checked", false);
            }

            if (data.DatosUsuario.PasswordNeverExpires == true) {
                $("#ClaveNoExpira").prop("checked");
                $("#ClaveNoExpira").attr("checked", true);
                $("#ClaveNoExpira")[0].checked = true;
            }
            else {
                $("#ClaveNoExpira").attr("checked", false);
            }

            if (data.DatosUsuario.AllowReversiblePasswordEncryption == true) {
                $("#AlmacenarClave").prop("checked");
                $("#AlmacenarClave").attr("checked", true);
                $("#AlmacenarClave")[0].checked = true;
            }
            else {
                $("#AlmacenarClave").attr("checked", false);
            }

            if (data.DatosUsuario.LastPasswordSet == true) {
                $("#UsrCambiaClaveSesion").prop("checked");
                $("#UsrCambiaClaveSesion").attr("checked", true);
                $("#UsrCambiaClaveSesion")[0].checked = true;
            }
            else {
                $("#UsrCambiaClaveSesion").attr("checked", false);
            }
        }

        function desHabilitarCampos(data)
        {
            $('#jstree').jstree("deselect_all");
            $("#btnSubmit").attr("disabled", true);
            $("#btnDesUsr").attr("disabled", true);
            $("#UpnPrefijo").attr("disabled", true);
            $("#UpnPrefijo").val('');
            $("#Nombres").attr("disabled", true);
            $("#Nombres").val('');
            $("#Apellidos").attr("disabled", true);
            $("#Apellidos").val('');
            $("#NombreCompleto").attr("disabled", true);
            $("#NombreCompleto").val('');
            $("#Clave").attr("disabled", true);
            $("#Clave").val('');
            $("#Correo").attr("disabled", true);
            $("#Correo").val('');
            $("#ExisteUsuario").val(false);
            $("#CodigoLicencia").attr("disabled", true);
            $("#CodigoLicencia").val('');
            $("#PatchOu").val('');
            $("#CambioPatchOu").val(false);

            //Nuevos campos
            $("#Anexo").val("");
            $("#Anexo").attr("disabled", true);
            $("#Cumpleanos").val("");
            $("#Cumpleanos").attr("disabled", true);
            $("#CentroCosto").val("");
            $("#CentroCosto").attr("disabled", true);
            $("#Oficina").val('');
            $("#Oficina").attr("disabled", true);
            $("#Ciudad").val('');
            $("#Ciudad").attr("disabled", true);
            $("#PaisRegion").val('');
            $("#PaisRegion").attr("disabled", true);
            $("#DireccionSucursal").val("");
            $("#DireccionSucursal").attr("disabled", true);
            $("#Ingreso").val("");
            $("#Ingreso").attr("disabled", true);
            $("#Cargo").val('');
            $("#Cargo").attr("disabled", true);
            $("#Departamento").val('');
            $("#Departamento").attr("disabled", true);
            $("#Organizacion").val('');
            $("#Organizacion").attr("disabled", true);
            $("#Jefatura").val("");
            $("#JefaturaCn").val("");
            $("#Movil").val("");
            $("#Movil").attr("disabled", true);
            $("#Domicilio").val("");
            $("#Domicilio").attr("disabled", true);
            $("#PinHp").val("");
            $("#PinHp").attr("disabled", true);
            $("#TelefIp").val("");
            $("#TelefIp").attr("disabled", true);
            $("#Notas").val("");
            $("#Notas").attr("disabled", true);
            $("#Rut").val("");
            $("#Rut").attr("disabled", true);
            $("#UsrCambiaClaveSesion").attr("checked", false);
            $("#UsrCambiaClaveSesion").attr("disabled", true);
            $("#UsrNoCambiaClave").attr("checked", false);
            $("#UsrNoCambiaClave").attr("disabled", true);
            $("#ClaveNoExpira").attr("checked", false);
            $("#ClaveNoExpira").attr("disabled", true);
            $("#AlmacenarClave").attr("checked", false);
            $("#AlmacenarClave").attr("disabled", true);
        }

        function listaGruposAdByOu()
        {            
            var sUsrAd = $("#NombreUsuario").val();

            if (sUsrAd == '') {
                $("#SeccionAsociarGrupo tbody").html('');
                return;
            }

            var codAdm = '@Convert.ToInt32(EnumPerfilUsuario.ADMP)';
            var codPerfil = '@SessionViewModel.Usuario.PerfilId';
            if (codAdm == codPerfil)
            {
                $.ajax({
                url: '@Url.Action("ObtenerListaGruposAdOu2", "Home")',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                async: false,
                dataType: 'json',
                processData: false,
                data: JSON.stringify({ usrAD: sUsrAd }),
                success: function (data) {
                    if (data.Session == false) {
                        BootstrapDialog.alert({
			                    title: '¡Validación Sesión!',
			                    message: '<strong>Su sesión ha expirado. Seleccione <a href="@Url.Action("IndexLogin", "Error", new { mensajeError = "Su sesión ha expirado." })">aquí</a> para iniciar sesión nuevamente</strong>',
			                    type: BootstrapDialog.TYPE_WARNING
		                    });
                        return;
                    }

                    if (data.Error != '') {
                        BootstrapDialog.alert({
                            title: '¡Error al encontrar listado de Grupos en el AD!',
                            message: '<strong>' + data.Error + '</strong>',
                            type: BootstrapDialog.TYPE_DANGER
                        });
                    }
                    else {
                        if (data.GrupoOu != null) {
                            $('#tbAsociarGrupo .tbody').html('');
                            var contentido = '';

                            $("#NombreGrupoSel").val('');
                            var nomGrupoSel = $("#NombreGrupoSel").val();

                            if (data.GrupoOu.length > 0)
                            {
                                $("#btnGrabarGrupo").attr('disabled', false);
                                $("#FilaGrupoSel").val(data.GrupoOu.length + 1);
                            }

                            for (var i = 0; i < data.GrupoOu.length; i++) {
                                if (data.GrupoOu[i].ExisteGrupo == true) {
                                    var nomGrupo = "'" + data.GrupoOu[i].NombreGrupo.trim() + "'";
                                    contentido += '<tr class="trGrupoOu' + i + '">';
                                    contentido += '<td>' + (data.GrupoOu[i].NumeroGrupo) + '</td>';
                                    contentido += '<td>' + (data.GrupoOu[i].NombreGrupo == null ? '' : data.GrupoOu[i].NombreGrupo) + '</td>';
                                    contentido += '<td>' + (data.GrupoOu[i].TipoGrupo == null ? '' : data.GrupoOu[i].TipoGrupo) + '</td>';
                                    contentido += '<td>' + (data.GrupoOu[i].UbicacionGrupo == null ? '' : data.GrupoOu[i].UbicacionGrupo) + '</td>';
                                    contentido += '<td class="columnaAcciones textCenter">';                                    
                                    contentido += '<a style="cursor: pointer;" class="glyphicon glyphicon-remove colorOrange" title="Desasignar Grupo a Usuario" onclick="desAsignarGrupoUsuario(' + i + ', ' + nomGrupo + ')"></a>';
                                    contentido += '</td></tr>';
                                    nomGrupoSel = data.GrupoOu[i].NombreGrupo + ',';
                                }
                            }
                            $('#tbAsociarGrupo tbody').html(contentido);
                            $("#NombreGrupoSel").val(nomGrupoSel);
                        } else {
                            BootstrapDialog.alert({
                                title: '¡Error al encontrar listado de Grupos en el AD!',
                                message: '<strong>No existen Grupos para OU seleccionada.</strong>',
                                type: BootstrapDialog.TYPE_DANGER
                            });
                        }
                    }
                },
                complete: function () {
                    $("#SeccionAsociarGrupo").show();
                },
                error: function (data) {
                    BootstrapDialog.alert({
                        title: '¡Error al encontrar listado de Grupos en el AD!',
                        message: '<strong>' + data.Error + '</strong>',
                        type: BootstrapDialog.TYPE_DANGER
                    });
                }
                });
            }
        }

        $("#btnSubmit").off('click').click(function () {
            $("#loading-modal").show();
            $("#Correo").val($("#NombreUsuario").val() + $("#UpnPrefijo").val());
            setTimeout(function () {
                actualizarCuentaUsuario();
            }, 1000);
        });

        function actualizarCuentaUsuario() {
            var usrCambiaClaveSesion = false;
            var usrNoCambiaClave = false;
            var claveNoExpira = false;
            var almacenarClave = false;

            if ($('#UsrCambiaClaveSesion').is(":checked")) {
                usrCambiaClaveSesion = true;
            }
            if ($('#UsrNoCambiaClave').is(":checked")) {
                usrNoCambiaClave = true;
            }
            if ($('#ClaveNoExpira').is(":checked")) {
                claveNoExpira = true;
            }
            if ($('#AlmacenarClave').is(":checked")) {
                almacenarClave = true;
            }

            var objEnvio =
            {
                model:
                {
                    'Nombres': $('#Nombres').val(),
                    'Apellidos': $('#Apellidos').val(),
                    'NombreUsuario': $('#NombreUsuario').val(),
                    'Clave': $('#Clave').val(),
                    'Licencia': $('#LicenciaSel').val(),
                    'UpnPrefijo': $('#UpnPrefijo').val(),
                    'NombreCompleto': $('#NombreCompleto').val(),
                    'Correo': $('#Correo').val(),
                    'PatchOu': $('#PatchOu').val(),
                    'ExisteUsuario': $("#ExisteUsuario").val(),
                    'CodigoLicencia': $("#CodigoLicencia").val(),
                    'CambioPatchOu': $("#CambioPatchOu").val(),
                    'Anexo': $("#Anexo").val(),
                    'Cumpleanos': $("#Cumpleanos").val(),
                    'CentroCosto': $("#CentroCosto").val(),
                    'Oficina': $("#Oficina").val(),
                    'Ciudad': $("#Ciudad").val(),
                    'PaisRegion': $("#PaisRegion").val(),
                    'DireccionSucursal': $("#DireccionSucursal").val(),
                    'Ingreso': $("#Ingreso").val(),
                    'Cargo': $("#Cargo").val(),
                    'Departamento': $("#Departamento").val(),
                    'Organizacion': $("#Organizacion").val(),
                    'Jefatura': $("#Jefatura").val(),
                    'JefaturaCn': $("#JefaturaCn").val(),
                    'Movil': $("#Movil").val(),
                    'Domicilio': $("#Domicilio").val(),
                    'PinHp': $("#PinHp").val(),
                    'TelefIp': $("#TelefIp").val(),
                    'Notas': $("#Notas").val(),
                    'Rut': $("#Rut").val(),
                    'UsrCambiaClaveSesion': usrCambiaClaveSesion,
                    'UsrNoCambiaClave': usrNoCambiaClave,
                    'ClaveNoExpira': claveNoExpira,
                    'AlmacenarClave': almacenarClave
                }
            };

            $.ajax({
                url: '@Url.Action("ActualizarCuentaUsuario", "Home")',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                async: false,
                dataType: 'json',
                processData: false,
                data: JSON.stringify({ model: objEnvio.model }),
                success: function (data) {
                    if (data.Session == false) {
                        BootstrapDialog.alert({
			                    title: '¡Validación Sesión!',
			                    message: '<strong>Su sesión ha expirado. Seleccione <a href="@Url.Action("IndexLogin", "Error", new { mensajeError = "Su sesión ha expirado." })">aquí</a> para iniciar sesión nuevamente</strong>',
			                    type: BootstrapDialog.TYPE_WARNING
		                    });
                        return;
                    }

                    if (data.Error != '') {
                        $("#btnSubmit").attr("disabled", false);

                        BootstrapDialog.show({
                            title: 'Error al Actualizar Cuenta Usuario en el AD',
                            message: '<strong>' + data.Error + '</strong>',
                            type: BootstrapDialog.TYPE_DANGER,
                            buttons:
                            [
                                {
                                    label: 'Aceptar',
                                    cssClass: 'btn-success',
                                    action: function (dialog) {
                                        dialog.close();
                                    }
                                }
                            ]
                        });
                    } else {
                        if (data.Validar) {
                            $("#btnSubmit").attr("disabled", true);

                            if ($("#CambioPatchOu").val() == 'true') {
                                BootstrapDialog.show({
                                    title: '¡Proceso Exitoso!',
                                    message: '<strong>Cuenta modificada correctamente. Se han eliminado los grupos que tenía asociados. Favor asignar nuevos Grupos.</strong>',
                                    type: BootstrapDialog.TYPE_SUCCESS,
                                    buttons:
                                    [
                                        {
                                            label: 'Aceptar',
                                            cssClass: 'btn-success',
                                            action: function (dialog) {
                                                dialog.close();
                                            }
                                        }
                                    ]
                                });
                            }
                            else
                            {
                                BootstrapDialog.show({
                                    title: '¡Proceso Exitoso!',
                                    message: '<strong>Cuenta modificada correctamente.</strong>',
                                    type: BootstrapDialog.TYPE_SUCCESS,
                                    buttons:
                                    [
                                        {
                                            label: 'Aceptar',
                                            cssClass: 'btn-success',
                                            action: function (dialog) {
                                                dialog.close();
                                            }
                                        }
                                    ]
                                });
                            }

                        } else {
                            $("#btnSubmit").attr("disabled", false);

                            BootstrapDialog.show({
                                title: 'Error al Actualizar Cuenta Usuario en el AD',
                                message: '<strong>' + data.Error + '</strong>',
                                type: BootstrapDialog.TYPE_DANGER,
                                buttons:
                                [
                                    {
                                        label: 'Aceptar',
                                        cssClass: 'btn-success',
                                        action: function (dialog) {
                                            dialog.close();
                                        }
                                    }
                                ]
                            });
                        }
                    }
                },
                complete: function () {
                    $("#loading-modal").hide();
                    listaGruposAdByOu();
                },
                error: function (data) {
                    $("#btnSubmit").attr("disabled", false);
                    $("#loading-modal").hide();

                    BootstrapDialog.show({
                        title: 'Error al Actualizar Cuenta Usuario en el AD',
                        message: '<strong>' + data.Error + '</strong>',
                        type: BootstrapDialog.TYPE_DANGER,
                        buttons:
                        [
                            {
                                label: 'Aceptar',
                                cssClass: 'btn-success',
                                action: function (dialog) {
                                    dialog.close();
                                }
                            }
                        ]
                    });
                }
            });
        }

        $("#btnDesUsr").off('click').click(function () {
            var estadoSync = $("#EstadoSync").val();
            if (estadoSync == 'false') {
                $("#loading-modal").show();
                $("#SeccionAsociarGrupo").hide();
                setTimeout(function () {
                    deshabilitarUsuario();
                }, 1000);
            }
            else
            {
                BootstrapDialog.alert({
			                    title: '¡Validación Sincronización!',
			                    message: '<strong>No se puede deshabilitar cuenta ya que existe un proceso de sincronización en ejecución. Vuelva a buscar cuenta para actualizar estado.</strong>',
			                    type: BootstrapDialog.TYPE_WARNING
		                    });
            }
        });

        function deshabilitarUsuario() {
            var objEnvio =
            {
                model:
                {
                    'Nombres': $('#Nombres').val(),
                    'Apellidos': $('#Apellidos').val(),
                    'NombreUsuario': $('#NombreUsuario').val(),
                    'Clave': $('#Clave').val(),
                    'Licencia': $('#LicenciaSel').val(),
                    'UpnPrefijo': $('#UpnPrefijo').val(),
                    'NombreCompleto': $('#NombreCompleto').val(),
                    'Correo': $('#Correo').val(),
                    'PatchOu': $('#PatchOu').val(),
                    'ExisteUsuario': $("#ExisteUsuario").val()
                }
            };
            $.ajax({
                url: '@Url.Action("DeshabilitarUsuario", "Home")',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                async: false,
                dataType: 'json',
                processData: false,
                data: JSON.stringify({ model: objEnvio.model }),
                success: function (data) {
                    if (data.Session == false) {
                        BootstrapDialog.alert({
			                    title: '¡Validación Sesión!',
			                    message: '<strong>Su sesión ha expirado. Seleccione <a href="@Url.Action("IndexLogin", "Error", new { mensajeError = "Su sesión ha expirado." })">aquí</a> para iniciar sesión nuevamente</strong>',
			                    type: BootstrapDialog.TYPE_WARNING
		                    });
                        return;
                    }

                    if (data.Error != '') {
                        $("#btnSubmit").attr("disabled", true);
                        $("#btnDesUsr").attr("disabled", false);
                        BootstrapDialog.alert({
                            title: '¡Error al Deshabilitar Usuario!',
                            message: '<strong>' + data.Error + '</strong>',
                            type: BootstrapDialog.TYPE_DANGER
                        });
                    } else {
                        if (data.Validar) {
                            $("#btnSubmit").attr("disabled", true);
                            $("#btnDesUsr").attr("disabled", true);
                            BootstrapDialog.alert({
                                title: '¡Proceso Exitoso!',
                                message: '<strong>Usuario deshabilitado correctamente</strong>',
                                type: BootstrapDialog.TYPE_SUCCESS
                            });
                        } else {
                            $("#btnSubmit").attr("disabled", true);
                            $("#btnDesUsr").attr("disabled", false);
                            BootstrapDialog.alert({
                                title: '¡Error al Deshabilitar Usuario!',
                                message: '<strong>No se pudo deshabilitar usuario, intente más tarde.</strong>',
                                type: BootstrapDialog.TYPE_DANGER
                            });
                        }
                    }
                },
                complete: function () {
                    $("#loading-modal").hide();
                },
                error: function (data) {
                    $("#btnSubmit").attr("disabled", true);
                    $("#btnDesUsr").attr("disabled", false);
                    $("#loading-modal").hide();

                    BootstrapDialog.alert({
                        title: '¡Error al Deshabilitar Usuario!',
                        message: '<strong>' + data.Error + '</strong>',
                        type: BootstrapDialog.TYPE_DANGER
                    });
                }
            });
        }

        $('#Rut').on('blur', function () {
            var rut = $("#Rut").val();
            if (rutValido(rut)) {
                formateaRut(this, 'XXXXXXX-X');
            }
            else {
                BootstrapDialog.show({
                    title: '¡Validación!',
                    message: '<strong>Rut Incorrecto</strong>',
                    type: BootstrapDialog.TYPE_DANGER,
                    buttons: [{
                        label: 'Aceptar',
                        cssClass: 'btn-default btn-sm',
                        action: function (dialog) {
                            dialog.close();
                        }
                    }]
                });
                $('#Rut').focus();
                $("#Rut").val("");
            }
        });
    });
</script>
<script language="javascript" type="text/javascript">
    function asignarGrupoUsuario(idTrGrupoAsig, nombreGrupoAsig) {
        var valida = true;
        var userNameVal = $("#NombreUsuario").val();

        if (userNameVal == '') {
            valida = false;
            BootstrapDialog.alert({
                title: '¡Advertencia!',
                message: '<strong>Debe asignar un ID de Usuario</strong>',
                type: BootstrapDialog.TYPE_WARNING
            });
        }

        if (valida == true) {
            $.ajax({
                url: '@Url.Action("AsociarGrupoUsuario", "Home")',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                async: false,
                dataType: 'json',
                processData: false,
                data: JSON.stringify({ nomGrupo: nombreGrupoAsig, userName: userNameVal }),
                success: function (data) {
                    if (data.Session == false) {
                        BootstrapDialog.alert({
			                    title: '¡Validación Sesión!',
			                    message: '<strong>Su sesión ha expirado. Seleccione <a href="@Url.Action("IndexLogin", "Error", new { mensajeError = "Su sesión ha expirado." })">aquí</a> para iniciar sesión nuevamente</strong>',
			                    type: BootstrapDialog.TYPE_WARNING
		                    });
                        return;
                    }

                    if (data.Error != '') {
                        BootstrapDialog.alert({
                            title: '¡Error al asociar Grupo a Usuario en el AD!',
                            message: '<strong>' + data.Error + '</strong>',
                            type: BootstrapDialog.TYPE_DANGER
                        });
                    } else {
                        if (data.Validar) {
                            eliminarGrupo(idTrGrupoAsig, nombreGrupoAsig);
                            BootstrapDialog.alert({
                                title: '¡Proceso Exitoso!',
                                message: '<strong>Grupo asociado exitosamente al Usuario.</strong>',
                                type: BootstrapDialog.TYPE_SUCCESS
                            });
                        } else {
                            BootstrapDialog.alert({
                                title: '¡Error al asociar Grupo a Usuario en el AD!',
                                message: '<strong>No se pudo asignar el Grupo al Usuario, intente más tarde.</strong>',
                                type: BootstrapDialog.TYPE_DANGER
                            });
                        }
                    }
                },
                complete: function () {
                },
                error: function (data) {
                    BootstrapDialog.alert({
                        title: '¡Error al asociar Grupo a Usuario en el AD!',
                        message: '<strong>' + data.Error + '</strong>',
                        type: BootstrapDialog.TYPE_DANGER
                    });
                }
            });
        }
    }

    function desAsignarGrupoUsuario(idTrGrupoAsig, nombreGrupoAsig) {
        var valida = true;
        var userNameVal = $("#NombreUsuario").val();

        if (userNameVal == '') {
            valida = false;
            BootstrapDialog.alert({
                title: '¡Advertencia!',
                message: '<strong>Debe asignar un ID de Usuario</strong>',
                type: BootstrapDialog.TYPE_WARNING
            });
        }

        if (valida == true) {
            $.ajax({
                url: '@Url.Action("DesAsociarGrupoUsuario", "Home")',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                async: false,
                dataType: 'json',
                processData: false,
                data: JSON.stringify({ nomGrupo: nombreGrupoAsig, userName: userNameVal }),
                success: function (data) {
                    if (data.Session == false) {
                        BootstrapDialog.alert({
			                    title: '¡Validación Sesión!',
			                    message: '<strong>Su sesión ha expirado. Seleccione <a href="@Url.Action("IndexLogin", "Error", new { mensajeError = "Su sesión ha expirado." })">aquí</a> para iniciar sesión nuevamente</strong>',
			                    type: BootstrapDialog.TYPE_WARNING
		                    });
                        return;
                    }

                    if (data.Error != '') {
                        BootstrapDialog.alert({
                            title: '¡Error al Desasociar Grupo a Usuario en el AD!',
                            message: '<strong>' + data.Error + '</strong>',
                            type: BootstrapDialog.TYPE_DANGER
                        });
                    } else {
                        if (data.Validar) {
                            eliminarGrupo(idTrGrupoAsig, nombreGrupoAsig);
                            BootstrapDialog.alert({
                                title: '¡Proceso Exitoso!',
                                message: '<strong>Grupo desasociado exitosamente al Usuario.</strong>',
                                type: BootstrapDialog.TYPE_SUCCESS
                            });
                        } else {
                            BootstrapDialog.alert({
                                title: '¡Error al desasociar Grupo a Usuario en el AD!',
                                message: '<strong>No se pudo desasignar el Grupo al Usuario, intente más tarde.</strong>',
                                type: BootstrapDialog.TYPE_DANGER
                            });
                        }
                    }
                },
                complete: function () {
                },
                error: function (data) {
                    BootstrapDialog.alert({
                        title: '¡Error al desasociar Grupo a Usuario en el AD!',
                        message: '<strong>' + data.Error + '</strong>',
                        type: BootstrapDialog.TYPE_DANGER
                    });
                }
            });
        }
    }

    function eliminarGrupo(idTrGrupo, nombreGrupoElm) {
        var nomGrupoSel = $("#NombreGrupoSel").val();
        var nomGrupoSelFinal = '';
        if (nomGrupoSel != '') {
            var nomGrupoSplit = $("#NombreGrupoSel").val().split(',');
            $("#NombreGrupoSel").val('');
            for (var i = 0; i < nomGrupoSplit.length; i++) {
                var nomGrupoIngresado = nomGrupoSplit[i];
                if (nomGrupoIngresado.trim() != nombreGrupoElm.trim() && nomGrupoIngresado.trim() != '') {
                    nomGrupoSelFinal = nomGrupoIngresado.trim() + ',' + nomGrupoSelFinal;
                }
            }
        }

        $("#NombreGrupoSel").val(nomGrupoSelFinal);
        $('.trGrupoOu' + idTrGrupo).html('');
    }
</script>